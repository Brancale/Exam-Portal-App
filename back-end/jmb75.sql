-- phpMyAdmin SQL Dump
-- version 4.2.7.1
-- http://www.phpmyadmin.net
--
-- Host: sql2.njit.edu
-- Generation Time: Dec 10, 2018 at 11:53 PM
-- Server version: 5.5.29-log
-- PHP Version: 5.6.37

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;

--
-- Database: `jmb75`
--

-- --------------------------------------------------------

--
-- Table structure for table `EXAM`
--
-- Creation: Nov 11, 2018 at 09:16 PM
--

CREATE TABLE IF NOT EXISTS `EXAM` (
`EID` int(255) NOT NULL COMMENT 'Unique ID for each Exam',
  `Questions` varchar(10000) NOT NULL COMMENT 'Array of QIDs, to be looked up in Questions table',
  `PointsPerQuestion` varchar(10000) NOT NULL COMMENT 'points for exam, separated by |*|',
  `TotalPoints` int(11) NOT NULL
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=28 ;

--
-- Dumping data for table `EXAM`
--

INSERT INTO `EXAM` (`EID`, `Questions`, `PointsPerQuestion`, `TotalPoints`) VALUES
(1, '1|*|2|*|6', '10|*|30|*|50', 90),
(7, '1|*|2|*|6|*|19|*|21|*|22|*|23|*|39|*|40|*|41|*|42|*|43|*|44|*|45|*|46|*|47|*|48|*|49|*|50|*|51', '5|*|5|*|5|*|5|*|5|*|5|*|5|*|5|*|5|*|5|*|5|*|5|*|5|*|5|*|5|*|5|*|5|*|5|*|5|*|5', 100),
(11, '1|*|50|*|51', '40|*|50|*|10', 100),
(21, '1|*|2|*|57', '25|*|25|*|50', 100),
(23, '1|*|2', '23|*|15', 38),
(24, '1|*|2', '24|*|15', 39),
(25, '1|*|2|*|51|*|57', '30|*|30|*|30|*|30', 120),
(26, '1|*|6|*|42', '10|*|10|*|10', 30),
(27, '59', '10', 10);

-- --------------------------------------------------------

--
-- Table structure for table `QUESTIONS`
--
-- Creation: Nov 11, 2018 at 09:16 PM
--

CREATE TABLE IF NOT EXISTS `QUESTIONS` (
`QID` int(255) NOT NULL COMMENT 'Unique Question ID (Auto Increment)',
  `Question` varchar(5000) NOT NULL COMMENT 'Question prompt string',
  `Subject` varchar(255) NOT NULL COMMENT 'Name of Subject',
  `Difficulty` varchar(255) NOT NULL DEFAULT '1' COMMENT 'Easy, Medium, Hard',
  `Constraints` varchar(5000) DEFAULT NULL,
  `Autograde` varchar(10000) DEFAULT NULL,
  `Answer` varchar(10000) DEFAULT NULL
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 COMMENT='Question Bank with answers' AUTO_INCREMENT=60 ;

--
-- Dumping data for table `QUESTIONS`
--

INSERT INTO `QUESTIONS` (`QID`, `Question`, `Subject`, `Difficulty`, `Constraints`, `Autograde`, `Answer`) VALUES
(1, 'Write a function named maxArray() to find the maximum of an array. The function takes 1 parameter, an array consisting of a list of numbers.The function maxArray() should return the maximum value that was found within the array. You can assume that there is at least one element within the array.', 'For Loops', 'Easy', 'For Loops', 'maxArray([1,6,2,5,1])|*|maxArray([1,2,3])|*|maxArray([10])', '6|*|3|*|10'),
(2, 'We define the letters ''a'', ''e'', ''i'', ''o'' and ''u'' as vowels. We do not consider any other letter as a vowel.Write a function named initialVowels() that returns a list of words in a body of text that begin with a vowel. Include both capitalized and lower case instances of the vowels. A word should appear in the return list at most once, no matter how many times is occurs in the input string.Input: a string that consists of words, separated by spaces.Return: an list of words in the input string that begin with an upper or lower case vowel. You must use a for loop.', 'For Loops', 'Hard', 'For Loops', 'initialVowels(''Our lives begin to end the day we become silent about things that matter'')|*|initialVowels(''airplane avocado elephant igloo octopus mouse bechtold Dog Car Math Hiyo'')|*|initialVowels(''You have $7. Try not to spend more than $7 a day.'')', '[''Our'', ''end'', ''about'']|*|[''airplane'', ''avocado'', ''elephant'', ''igloo'', ''octopus'']|*|[''a'']'),
(6, 'Write a function named inRange() that tests whether a given number falls within a specified range. The functioninRange() takes three parameters:1. testNum2. floor3. ceilingThe function inRange() should return True if testNum is greater than or equal to floor and less than or equal toceiling.', 'If Statements', 'Easy', 'Conditionals', 'inRange(5,1,6)|*|inRange(7,1,6)', 'True|*|False'),
(19, 'Write a function repeatWords() that goes through a sentence in the form of a string and finds all of the duplicated words. \r\nThe function returns a list of all of the duplicated words only once. You must use a loop.', 'If Statements', 'Hard', 'Conditionals', 'sort(repeatWords(''repeat words repeat word words repeat no repeat''))|*|sort(repeatWords(''and I would walk 500 miles, and I would walk 500 more.''))', '[''repeat'', ''words'']|*|[''500'',''and'',''I'',''walk'',''would'']'),
(21, 'Return the string ''Hello World'' in a function called HelloWorld, if the input is "True". Otherwise, return "Bye".', 'If Statements', 'Easy', 'Conditionals', 'HelloWorld(''True'')|*|HelloWorld(''False'')', 'Hello World|*|Bye'),
(22, 'Write a function named beginsWith() that computes how many strings in a list of strings begin with a specified letter.\r\nThe function beginsWith() takes two parameters:\r\n1. letter, a string of length 1\r\n2. strList, a list of 0 or more strings\r\nThe function beginsWith() should return an integer that is the number of strings in strList that begin with letter.\r\nYou may assume that no word in strList begins with a capital letter. You must use a loop.', 'For Loops', 'Medium', 'For Loops', 'beginsWith(''t'',[''the'',''rain'',''in'',''spain'',''falls'',''mainly'',''on'',''the'',''plain''])', '2'),
(23, 'Write a function named doubleIt that takes a parameter a and returns twice the value, iff the parameter passed in is greater than 0. Otherwise, return 0.', 'If Statements', 'Easy', 'Conditionals', 'doubleIt(3)|*|doubleIt(0)', '6|*|0'),
(39, 'Write a function named evenLengths that takes a single parameter, stringList(a list of strings) and returns a total count of the strings in stringList that are of even length.', 'List', 'Easy', 'For Loops', 'evenLengths([''hi'',''bye'',''cart'',''mart''])|*|evenLengths([''hi'',''byes'',''cart'',''mart''])|*|evenLengths([''hi'',''bye'',''cart'',''fan''])', '3|*|4|*|2'),
(40, 'Using recursion, write a function doubleIt that takes two parameters, base and count, that doubles the base ''count'' amount of times. The function should return the doubled value.', 'Functions', 'Medium', 'Recursion', 'doubleIt(3,4)|*|doubleIt(2,5)', '48|*|64'),
(41, 'Write a function longestWord() that takes a string parameter and returns the length of the longest word within that string. You can assume that the string is not empty.', 'String Methods', 'Easy', 'For Loops', 'longestWord(''peter piper picked a peck of pickled peppers'')|*|longestWord(''the quick brown fox jumped over the lazy dog'')', '7|*|6'),
(42, 'Write a recursive function isPalindrome() that takes in a string parameter and returns whether or not a string is a palindrome. Note that a palindrome is defined as having the same sequence of characters forward as it does backward.\r\nEx: racecar  -> true', 'String Methods', 'Medium', 'Recursion', 'isPalindrome(''racecar'')|*|isPalindrome(''laptop'')|*|isPalindrome(''civic'')', 'True|*|False|*|True'),
(43, 'Write a function sumAll() that takes one parameter, n, and sums up all of the numbers from 0 to n using while loops. For example, sumAll(5) = 5 + 4 + 3 + 2 + 1 = 15. You can assume that n is a positive number.', 'While Loops', 'Medium', 'While Loops', 'sumAll(5)|*|sumAll(6)|*|sumAll(7)', '15|*|21|*|28'),
(44, 'Write a function sumAll2() that takes one parameter, an integer n, and returns all of the values summing up to it using recursion. For example, sumAll2(5) = 5 + 4 + 3 + 2 + 1 = 15', 'Functions', 'Medium', 'Recursion', 'sumAll2(5)|*|sumAll2(6)|*|sumAll2(7)', '15|*|21|*|28'),
(45, 'Write a method fibonacci() that takes a parameter n, and recursively returns the nth fibonacci number. You can assume that n is a positive number.\r\nFor Example: fibonacci(5) -> 3, fibonacci(7) -> 8', 'Functions', 'Hard', 'Recursion', 'fibonacci(5)|*|fibonacci(7)|*|fibonacci(10)', '3|*|8|*|34'),
(46, 'Write a function longWords() that takes in a sentence and a cutoff, and returns a list of all words longer then the cutoff. You can assume that the sentence is not empty, and that the cutoff is a positive number.', 'List', 'Medium', 'For Loops', 'longWords(''the quick brown fox jumped over the lazy dog'', 4)|*|longWords(''the quick brown fox jumped over the lazy dog'', 5)', '[''quick'',''brown'',''jumped'']|*|[''jumped'']'),
(47, 'Write a function named vowelCount() that counts and returns the number of vowels in a string parameter. The letters ''a'', ''e'', ''i'', ''o'' and ''u'' are the vowels. (Hint: both upper and lower case instances of vowels should be counted.) The method will take one parameter, text, which is a string containing characters.', 'String Methods', 'Medium', 'For Loops', 'vowelCount(''I am the walrus'')|*|vowelCount(''hello hi moo cows'')|*|vowelCount(''chicken turkey'')', '5|*|6|*|4'),
(48, 'Write a function wordCount() that takes in a string, text, and returns the number of words in that string. For full credit please use a while loop in your implementation. You can assume that text is not empty.', 'While Loops', 'Hard', 'While Loops', 'wordCount(''the quick brown fox jumped over the fence'')|*|wordCount(''peter piper picked pickled peppers'')', '8|*|5'),
(49, 'Write a function named compare() that tests the relative size of two objects and returns the result. The function compare() takes two parameters:1. thingOne2. thingTwoThe function compare() should return ''<'' if thingOne is less than thingTwo, ''>'' if thingOne is greater than thingTwo,and ''=='' in all other cases. Your function may assume that the two parameters are capable of being compared. For example, the following would be correct output>>> compare(0, 1)''<''>>> compare(''abc'', ''a'')''>''>>> compare([], [])''==''', 'If Statements', 'Easy', 'Coniditionals', 'compare(0,1)|*|(''abc'', ''a'')|*|compare([], [])', '<|*|>|*|=='),
(50, 'Write a function bigCount() that returns the number of elements in an array that are greater then a threshold. The function will take two parameters, lst, the sequence of numbers to test, and threshold, the minimum value a number must exceed to be counted.', 'List', 'Easy', 'For Loops', 'bigCount([1,2,4,1,5],2)|*|bigCount([-1,-2,4,1,-5],2)', '2|*|1'),
(51, 'Write a function named merge() that takes in two lists of integer values and appends the values of the second list to the values of the first list. The resulting list is then returned. You may assume that both lists are the same size, and you must use nested for loops.', 'For Loops', 'Easy', 'For Loops', 'merge([1,2,3,4],[5,6,7,8])|*|merge([2,3],[6,7])', '[6, 8, 10, 12]|*|[8, 10]'),
(57, 'Write a function name operation, that returns a+b if op is +, a-b if op is -, a*b if op is *, and a/b if op is/', 'If Statements', 'Medium', 'Coniditionals', 'operation(''+'', 1,2)|*|operation(''-'', 2,1)|*|operation(''*'', 2,1)|*|operation(''/'', 2,1)', '3|*|1|*|2|*|2'),
(58, 'ayo testing ova here', 'If Statements', 'Hard', 'Coniditionals', '|*|', '|*|'),
(59, 'write a function named tripleIt() that returns 3x the value.', 'List', 'Easy', 'None', 'tripleIt(3)|*|tripleIt(2)', '9|*|6');

-- --------------------------------------------------------

--
-- Table structure for table `STUDENT`
--
-- Creation: Dec 04, 2018 at 03:48 AM
--

CREATE TABLE IF NOT EXISTS `STUDENT` (
`SExamID` int(11) NOT NULL COMMENT 'ID of student exam results',
  `EID` int(11) NOT NULL COMMENT 'Foreign key to Exam ID',
  `SName` varchar(255) NOT NULL COMMENT 'Foreign key to USERS UID',
  `Answers` varchar(10000) NOT NULL COMMENT 'Array of student selected answers',
  `Score` double DEFAULT NULL COMMENT 'Percent student score',
  `Comments` varchar(10000) DEFAULT NULL COMMENT 'Array of Instructor Comments',
  `Breakdown` varchar(10000) DEFAULT NULL,
  `PointsPerProblem` varchar(10000) DEFAULT NULL,
  `OrigPointsPerProblem` varchar(10000) DEFAULT NULL,
  `OrigScore` double DEFAULT NULL,
  `gradeChanged` int(11) DEFAULT '0'
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 COMMENT='Student exam results here' AUTO_INCREMENT=88 ;

--
-- Dumping data for table `STUDENT`
--

INSERT INTO `STUDENT` (`SExamID`, `EID`, `SName`, `Answers`, `Score`, `Comments`, `Breakdown`, `PointsPerProblem`, `OrigPointsPerProblem`, `OrigScore`, `gradeChanged`) VALUES
(1, 1, 'jmb75', 'def maxArray(arr):    max_ = arr[0]    for item in arr:        if item > max_:            max_ = item    return max_|*|vowels = "AEIOUaeiou"return vowels|*|def inRange(a, b, c):    return True', 37, 'comment|*||*|', '<br><span style=''color: green''><b>Constraint Passed: Valid Function Name: maxArray</b><br>Points Awarded: 2</span><br><br><span style=''color: green''><b>Constraint Passed: Function Returns a Value</b><br>Points Awarded:  2</span><br><br><span style=''color: red''><b>Test Case 1 Failed.</b><br>Expected SyntaxError: invalid syntax\n for maxArray([1,6,2,5,1])<br>Received 6<br>Points Deducted: 2</span><br><br><span style=''color: red''><b>Test Case 2 Failed.</b><br>Expected SyntaxError: invalid syntax\n for maxArray([1,2,3])<br>Received 3<br>Points Deducted: 2</span><br><br><span style=''color: red''><b>Test Case 3 Failed.</b><br>Expected SyntaxError: invalid syntax\n for maxArray([10])<br>Received 10<br>Points Deducted: 2</span><br><br>|*|<br><span style=''color: red''><b>Incorrect Function Name: </b><br>Expected Function Name: initialVowels<br>Points Deducted: 2</span><br><br><span style=''color: green''><b>Constraint Passed: Function Returns a Value</b><br>Points Awarded:  2</span><br><br><span style=''color: red''><b>Test Case 1 Failed.</b><br>Expected SyntaxError: invalid syntax\n for initialVowels(''Our lives begin to end the day we become silent about things that matter'')<br>Received [''Our'', ''end'', ''about'']<br>Points Deducted: 9</span><br><br><span style=''color: red''><b>Test Case 2 Failed.</b><br>Expected SyntaxError: invalid syntax\n for initialVowels(''airplane avocado elephant igloo octopus mouse bechtold Dog Car Math Hiyo'')<br>Received [''airplane'', ''avocado'', ''elephant'', ''igloo'', ''octopus'']<br>Points Deducted: 9</span><br><br><span style=''color: red''><b>Test Case 3 Failed.</b><br>Expected SyntaxError: invalid syntax\n for initialVowels(''You have $7. Try not to spend more than $7 a day.'')<br>Received [''a'']<br>Points Deducted: 8</span><br><br>|*|<br><span style=''color: green''><b>Constraint Passed: Valid Function Name: inRange</b><br>Points Awarded: 2</span><br><br><span style=''color: green''><b>Constraint Passed: Function Returns a Value</b><br>Points Awarded:  2</span><br><br><span style=''color: green''><b>Test Case 1 has Passed.</b> <br>Points Awarded: 23</span><br><br><span style=''color: red''><b>Test Case 2 Failed.</b><br>Expected True for inRange(7,1,6)<br>Received False<br>Points Deducted: 23</span><br><br>', '8|*|2|*|27', '4|*|2|*|27', 33, 1),
(53, 1, 'pr327', 'maxArray([1,6,2,5,12])|*|def initialVowels(sentence):    vowels = "AEIOUaeiou"    words = sentence.split()    lst = []    for word in words:        if word[0] in vowels:            lst.append(word)    return lst|*|def inRange(num,left,right):    return num >= left and num <= right', 54, NULL, '<br><span style=''color: red''><b>Incorrect Function Name: </b><br>Expected Function Name: maxArray<br>Points Deducted: 2</span><br><br><span style=''color: red''><b>No Function Return</b><br>Points Deducted: 2</span><br><br><span style=''color: red''><b>Test Case 1 Failed.</b><br>Expected NameError: name ''maxArraymaxArray'' is not defined\n for maxArray([1,6,2,5,1])<br>Received 6<br>Points Deducted: 2</span><br><br><span style=''color: red''><b>Test Case 2 Failed.</b><br>Expected NameError: name ''maxArraymaxArray'' is not defined\n for maxArray([1,2,3])<br>Received 3<br>Points Deducted: 2</span><br><br><span style=''color: red''><b>Test Case 3 Failed.</b><br>Expected NameError: name ''maxArraymaxArray'' is not defined\n for maxArray([10])<br>Received 10<br>Points Deducted: 2</span><br><br>|*|<br><span style=''color: green''><b>Constraint Passed: Valid Function Name: initialVowels</b><br>Points Awarded: 2</span><br><br><span style=''color: green''><b>Constraint Passed: Function Returns a Value</b><br>Points Awarded:  2</span><br><br><span style=''color: red''><b>Test Case 1 Failed.</b><br>Expected SyntaxError: invalid syntax\n for initialVowels(''Our lives begin to end the day we become silent about things that matter'')<br>Received [''Our'', ''end'', ''about'']<br>Points Deducted: 9</span><br><br><span style=''color: red''><b>Test Case 2 Failed.</b><br>Expected SyntaxError: invalid syntax\n for initialVowels(''airplane avocado elephant igloo octopus mouse bechtold Dog Car Math Hiyo'')<br>Received [''airplane'', ''avocado'', ''elephant'', ''igloo'', ''octopus'']<br>Points Deducted: 9</span><br><br><span style=''color: red''><b>Test Case 3 Failed.</b><br>Expected SyntaxError: invalid syntax\n for initialVowels(''You have $7. Try not to spend more than $7 a day.'')<br>Received [''a'']<br>Points Deducted: 8</span><br><br>|*|<br><span style=''color: green''><b>Constraint Passed: Valid Function Name: inRange</b><br>Points Awarded: 2</span><br><br><span style=''color: green''><b>Constraint Passed: Function Returns a Value</b><br>Points Awarded:  2</span><br><br><span style=''color: green''><b>Test Case 1 has Passed.</b> <br>Points Awarded: 23</span><br><br><span style=''color: green''><b>Test Case 2 has Passed.</b> <br>Points Awarded: 23</span><br><br>', '0|*|4|*|50', '0|*|4|*|50', 54, 0),
(70, 11, 'student', 'def operation(op, a, b):\n    if op == ''+'':\n        return a + b\n    elif op == ''-'':\n        return a - b\n    elif op == ''*'':\n        return a * b\n    elif op == ''/'':\n        return a / b\n    else:\n        return ''error''|*|def operation(op, a, b):\n    if op == ''+'':\n        return a + b\n    elif op == ''-'':\n        return a - b\n    elif op == ''*'':\n        return a * b\n    elif op == ''/'':\n        return a / b\n    else:\n        return ''error''|*|def operation(op, a, b):\n    if op == ''+'':\n        return a + b\n    elif op == ''-'':\n        return a - b\n    elif op == ''*'':\n        return a * b\n    elif op == ''/'':\n        return a / b\n    else:\n        return ''error''', 16, 'argfdfgsdfg|*|sdfgd|*|sdfgfdg', '<br><span style=''color: red''><b>Incorrect Function Name: operation</b><br>Expected Function Name: maxArray<br>Points Deducted: 2</span><br><br><span style=''color: green''><b>Constraint Passed: Function Returns a Value</b><br>Points Awarded:  2</span><br><br><span style=''color: red''><b>Test Case 1 Failed.</b><br>Expected TypeError: maxArray() missing 2 required positional arguments: ''a'' and ''b''\n for maxArray([1,6,2,5,1])<br>Received 6<br>Points Deducted: 12</span><br><br><span style=''color: red''><b>Test Case 2 Failed.</b><br>Expected TypeError: maxArray() missing 2 required positional arguments: ''a'' and ''b''\n for maxArray([1,2,3])<br>Received 3<br>Points Deducted: 12</span><br><br><span style=''color: red''><b>Test Case 3 Failed.</b><br>Expected TypeError: maxArray() missing 2 required positional arguments: ''a'' and ''b''\n for maxArray([10])<br>Received 10<br>Points Deducted: 12</span><br><br>|*|<br><span style=''color: red''><b>Incorrect Function Name: operation</b><br>Expected Function Name: bigCount<br>Points Deducted: 2</span><br><br><span style=''color: green''><b>Constraint Passed: Function Returns a Value</b><br>Points Awarded:  2</span><br><br><span style=''color: red''><b>Test Case 1 Failed.</b><br>Expected TypeError: bigCount() missing 1 required positional argument: ''b''\n for bigCount([1,2,4,1,5],2)<br>Received 2<br>Points Deducted: 23</span><br><br><span style=''color: red''><b>Test Case 2 Failed.</b><br>Expected TypeError: bigCount() missing 1 required positional argument: ''b''\n for bigCount([-1,-2,4,1,-5],2)<br>Received 1<br>Points Deducted: 23</span><br><br>|*|<br><span style=''color: red''><b>Incorrect Function Name: operation</b><br>Expected Function Name: merge<br>Points Deducted: 2</span><br><br><span style=''color: green''><b>Constraint Passed: Function Returns a Value</b><br>Points Awarded:  2</span><br><br><span style=''color: red''><b>Test Case 1 Failed.</b><br>Expected TypeError: merge() missing 1 required positional argument: ''b''\n for merge([1,2,3,4],[5,6,7,8])<br>Received [6, 8, 10, 12]<br>Points Deducted: 3</span><br><br><span style=''color: red''><b>Test Case 2 Failed.</b><br>Expected TypeError: merge() missing 1 required positional argument: ''b''\n for merge([2,3],[6,7])<br>Received [8, 10]<br>Points Deducted: 3</span><br><br>', '12|*|2|*|2', '2|*|2|*|2', 6, 1),
(72, 7, 'student', 'def operation(op, a, b):\n    if op == ''+'':\n        return a + b\n    elif op == ''-'':\n        return a - b\n    elif op == ''*'':\n        return a * b\n    elif op == ''/'':\n        return a / b\n    else:\n        return ''error''|*|def operation(op, a, b):\n    if op == ''+'':\n        return a + b\n    elif op == ''-'':\n        return a - b\n    elif op == ''*'':\n        return a * b\n    elif op == ''/'':\n        return a / b\n    else:\n        return ''error''|*|def operation(op, a, b):\n    if op == ''+'':\n        return a + b\n    elif op == ''-'':\n        return a - b\n    elif op == ''*'':\n        return a * b\n    elif op == ''/'':\n        return a / b\n    else:\n        return ''error''|*|def operation(op, a, b):\n    if op == ''+'':\n        return a + b\n    elif op == ''-'':\n        return a - b\n    elif op == ''*'':\n        return a * b\n    elif op == ''/'':\n        return a / b\n    else:\n        return ''error''|*|def operation(op, a, b):\n    if op == ''+'':\n        return a + b\n    elif op == ''-'':\n        return a - b\n    elif op == ''*'':\n        return a * b\n    elif op == ''/'':\n        return a / b\n    else:\n        return ''error''|*|def operation(op, a, b):\n    if op == ''+'':\n        return a + b\n    elif op == ''-'':\n        return a - b\n    elif op == ''*'':\n        return a * b\n    elif op == ''/'':\n        return a / b\n    else:\n        return ''error''|*|def operation(op, a, b):\n    if op == ''+'':\n        return a + b\n    elif op == ''-'':\n        return a - b\n    elif op == ''*'':\n        return a * b\n    elif op == ''/'':\n        return a / b\n    else:\n        return ''error''|*|def operation(op, a, b):\n    if op == ''+'':\n        return a + b\n    elif op == ''-'':\n        return a - b\n    elif op == ''*'':\n        return a * b\n    elif op == ''/'':\n        return a / b\n    else:\n        return ''error''|*|def operation(op, a, b):\n    if op == ''+'':\n        return a + b\n    elif op == ''-'':\n        return a - b\n    elif op == ''*'':\n        return a * b\n    elif op == ''/'':\n        return a / b\n    else:\n        return ''error''|*|def operation(op, a, b):\n    if op == ''+'':\n        return a + b\n    elif op == ''-'':\n        return a - b\n    elif op == ''*'':\n        return a * b\n    elif op == ''/'':\n        return a / b\n    else:\n        return ''error''|*|def operation(op, a, b):\n    if op == ''+'':\n        return a + b\n    elif op == ''-'':\n        return a - b\n    elif op == ''*'':\n        return a * b\n    elif op == ''/'':\n        return a / b\n    else:\n        return ''error''|*|def operation(op, a, b):\n    if op == ''+'':\n        return a + b\n    elif op == ''-'':\n        return a - b\n    elif op == ''*'':\n        return a * b\n    elif op == ''/'':\n        return a / b\n    else:\n        return ''error''|*|def operation(op, a, b):\n    if op == ''+'':\n        return a + b\n    elif op == ''-'':\n        return a - b\n    elif op == ''*'':\n        return a * b\n    elif op == ''/'':\n        return a / b\n    else:\n        return ''error''|*|def operation(op, a, b):\n    if op == ''+'':\n        return a + b\n    elif op == ''-'':\n        return a - b\n    elif op == ''*'':\n        return a * b\n    elif op == ''/'':\n        return a / b\n    else:\n        return ''error''|*|def operation(op, a, b):\n    if op == ''+'':\n        return a + b\n    elif op == ''-'':\n        return a - b\n    elif op == ''*'':\n        return a * b\n    elif op == ''/'':\n        return a / b\n    else:\n        return ''error''|*|def operation(op, a, b):\n    if op == ''+'':\n        return a + b\n    elif op == ''-'':\n        return a - b\n    elif op == ''*'':\n        return a * b\n    elif op == ''/'':\n        return a / b\n    else:\n        return ''error''|*|def operation(op, a, b):\n    if op == ''+'':\n        return a + b\n    elif op == ''-'':\n        return a - b\n    elif op == ''*'':\n        return a * b\n    elif op == ''/'':\n        return a / b\n    else:\n        return ''error''|*|def operation(op, a, b):\n    if op == ''+'':\n        return a + b\n    elif op == ''-'':\n        return a - b\n    elif op == ''*'':\n        return a * b\n    elif op == ''/'':\n        return a / b\n    else:\n        return ''error''|*|def operation(op, a, b):\n    if op == ''+'':\n        return a + b\n    elif op == ''-'':\n        return a - b\n    elif op == ''*'':\n        return a * b\n    elif op == ''/'':\n        return a / b\n    else:\n        return ''error''|*|def operation(op, a, b):\n    if op == ''+'':\n        return a + b\n    elif op == ''-'':\n        return a - b\n    elif op == ''*'':\n        return a * b\n    elif op == ''/'':\n        return a / b\n    else:\n        return ''error''', 40, NULL, '<br><span style=''color: red''><b>Incorrect Function Name: operation</b><br>Expected Function Name: maxArray<br>Points Deducted: 2</span><br><br><span style=''color: green''><b>Constraint Passed: Function Returns a Value</b><br>Points Awarded:  2</span><br><br><span style=''color: red''><b>Test Case 1 Failed.</b><br>Expected TypeError: maxArray() missing 2 required positional arguments: ''a'' and ''b''\n for maxArray([1,6,2,5,1])<br>Received 6<br>Points Deducted: 0</span><br><br><span style=''color: red''><b>Test Case 2 Failed.</b><br>Expected TypeError: maxArray() missing 2 required positional arguments: ''a'' and ''b''\n for maxArray([1,2,3])<br>Received 3<br>Points Deducted: 0</span><br><br><span style=''color: red''><b>Test Case 3 Failed.</b><br>Expected TypeError: maxArray() missing 2 required positional arguments: ''a'' and ''b''\n for maxArray([10])<br>Received 10<br>Points Deducted: 1</span><br><br>|*|<br><span style=''color: red''><b>Incorrect Function Name: operation</b><br>Expected Function Name: initialVowels<br>Points Deducted: 2</span><br><br><span style=''color: green''><b>Constraint Passed: Function Returns a Value</b><br>Points Awarded:  2</span><br><br><span style=''color: red''><b>Test Case 1 Failed.</b><br>Expected TypeError: initialVowels() missing 2 required positional arguments: ''a'' and ''b''\n for initialVowels(''Our lives begin to end the day we become silent about things that matter'')<br>Received [''Our'', ''end'', ''about'']<br>Points Deducted: 0</span><br><br><span style=''color: red''><b>Test Case 2 Failed.</b><br>Expected TypeError: initialVowels() missing 2 required positional arguments: ''a'' and ''b''\n for initialVowels(''airplane avocado elephant igloo octopus mouse bechtold Dog Car Math Hiyo'')<br>Received [''airplane'', ''avocado'', ''elephant'', ''igloo'', ''octopus'']<br>Points Deducted: 0</span><br><br><span style=''color: red''><b>Test Case 3 Failed.</b><br>Expected TypeError: initialVowels() missing 2 required positional arguments: ''a'' and ''b''\n for initialVowels(''You have $7. Try not to spend more than $7 a day.'')<br>Received [''a'']<br>Points Deducted: 1</span><br><br>|*|<br><span style=''color: red''><b>Incorrect Function Name: operation</b><br>Expected Function Name: inRange<br>Points Deducted: 2</span><br><br><span style=''color: green''><b>Constraint Passed: Function Returns a Value</b><br>Points Awarded:  2</span><br><br><span style=''color: red''><b>Test Case 1 Failed.</b><br>Expected error for inRange(5,1,6)<br>Received True<br>Points Deducted: 1</span><br><br><span style=''color: red''><b>Test Case 2 Failed.</b><br>Expected error for inRange(7,1,6)<br>Received False<br>Points Deducted: 0</span><br><br>|*|<br><span style=''color: red''><b>Incorrect Function Name: operation</b><br>Expected Function Name: sort(repeatWords<br>Points Deducted: 2</span><br><br><span style=''color: green''><b>Constraint Passed: Function Returns a Value</b><br>Points Awarded:  2</span><br><br><span style=''color: red''><b>Test Case 1 Failed.</b><br>Expected SyntaxError: invalid syntax\n for sort(repeatWords(''repeat words repeat word words repeat no repeat''))<br>Received [''repeat'', ''words'']<br>Points Deducted: 1</span><br><br><span style=''color: red''><b>Test Case 2 Failed.</b><br>Expected SyntaxError: invalid syntax\n for sort(repeatWords(''and I would walk 500 miles, and I would walk 500 more.''))<br>Received [''500'',''and'',''I'',''walk'',''would'']<br>Points Deducted: 0</span><br><br>|*|<br><span style=''color: red''><b>Incorrect Function Name: operation</b><br>Expected Function Name: HelloWorld<br>Points Deducted: 2</span><br><br><span style=''color: green''><b>Constraint Passed: Function Returns a Value</b><br>Points Awarded:  2</span><br><br><span style=''color: red''><b>Test Case 1 Failed.</b><br>Expected TypeError: HelloWorld() missing 2 required positional arguments: ''a'' and ''b''\n for HelloWorld(''True'')<br>Received Hello World<br>Points Deducted: 1</span><br><br><span style=''color: red''><b>Test Case 2 Failed.</b><br>Expected TypeError: HelloWorld() missing 2 required positional arguments: ''a'' and ''b''\n for HelloWorld(''False'')<br>Received Bye<br>Points Deducted: 0</span><br><br>|*|<br><span style=''color: red''><b>Incorrect Function Name: operation</b><br>Expected Function Name: beginsWith<br>Points Deducted: 2</span><br><br><span style=''color: green''><b>Constraint Passed: Function Returns a Value</b><br>Points Awarded:  2</span><br><br><span style=''color: red''><b>Test Case 1 Failed.</b><br>Expected TypeError: beginsWith() missing 1 required positional argument: ''b''\n for beginsWith(''t'',[''the'',''rain'',''in'',''spain'',''falls'',''mainly'',''on'',''the'',''plain''])<br>Received 2<br>Points Deducted: 1</span><br><br>|*|<br><span style=''color: red''><b>Incorrect Function Name: operation</b><br>Expected Function Name: doubleIt<br>Points Deducted: 2</span><br><br><span style=''color: green''><b>Constraint Passed: Function Returns a Value</b><br>Points Awarded:  2</span><br><br><span style=''color: red''><b>Test Case 1 Failed.</b><br>Expected TypeError: doubleIt() missing 2 required positional arguments: ''a'' and ''b''\n for doubleIt(3)<br>Received 6<br>Points Deducted: 1</span><br><br><span style=''color: red''><b>Test Case 2 Failed.</b><br>Expected TypeError: doubleIt() missing 2 required positional arguments: ''a'' and ''b''\n for doubleIt(0)<br>Received 0<br>Points Deducted: 0</span><br><br>|*|<br><span style=''color: red''><b>Incorrect Function Name: operation</b><br>Expected Function Name: evenLengths<br>Points Deducted: 2</span><br><br><span style=''color: green''><b>Constraint Passed: Function Returns a Value</b><br>Points Awarded:  2</span><br><br><span style=''color: red''><b>Test Case 1 Failed.</b><br>Expected TypeError: evenLengths() missing 2 required positional arguments: ''a'' and ''b''\n for evenLengths([''hi'',''bye'',''cart'',''mart''])<br>Received 3<br>Points Deducted: 0</span><br><br><span style=''color: red''><b>Test Case 2 Failed.</b><br>Expected TypeError: evenLengths() missing 2 required positional arguments: ''a'' and ''b''\n for evenLengths([''hi'',''byes'',''cart'',''mart''])<br>Received 4<br>Points Deducted: 0</span><br><br><span style=''color: red''><b>Test Case 3 Failed.</b><br>Expected TypeError: evenLengths() missing 2 required positional arguments: ''a'' and ''b''\n for evenLengths([''hi'',''bye'',''cart'',''fan''])<br>Received 2<br>Points Deducted: 1</span><br><br>|*|<br><span style=''color: red''><b>Incorrect Function Name: operation</b><br>Expected Function Name: doubleIt<br>Points Deducted: 2</span><br><br><span style=''color: green''><b>Constraint Passed: Function Returns a Value</b><br>Points Awarded:  2</span><br><br><span style=''color: red''><b>Test Case 1 Failed.</b><br>Expected TypeError: doubleIt() missing 1 required positional argument: ''b''\n for doubleIt(3,4)<br>Received 48<br>Points Deducted: 1</span><br><br><span style=''color: red''><b>Test Case 2 Failed.</b><br>Expected TypeError: doubleIt() missing 1 required positional argument: ''b''\n for doubleIt(2,5)<br>Received 64<br>Points Deducted: 0</span><br><br>|*|<br><span style=''color: red''><b>Incorrect Function Name: operation</b><br>Expected Function Name: longestWord<br>Points Deducted: 2</span><br><br><span style=''color: green''><b>Constraint Passed: Function Returns a Value</b><br>Points Awarded:  2</span><br><br><span style=''color: red''><b>Test Case 1 Failed.</b><br>Expected TypeError: longestWord() missing 2 required positional arguments: ''a'' and ''b''\n for longestWord(''peter piper picked a peck of pickled peppers'')<br>Received 7<br>Points Deducted: 1</span><br><br><span style=''color: red''><b>Test Case 2 Failed.</b><br>Expected TypeError: longestWord() missing 2 required positional arguments: ''a'' and ''b''\n for longestWord(''the quick brown fox jumped over the lazy dog'')<br>Received 6<br>Points Deducted: 0</span><br><br>|*|<br><span style=''color: red''><b>Incorrect Function Name: operation</b><br>Expected Function Name: isPalindrome<br>Points Deducted: 2</span><br><br><span style=''color: green''><b>Constraint Passed: Function Returns a Value</b><br>Points Awarded:  2</span><br><br><span style=''color: red''><b>Test Case 1 Failed.</b><br>Expected TypeError: isPalindrome() missing 2 required positional arguments: ''a'' and ''b''\n for isPalindrome(''racecar'')<br>Received True<br>Points Deducted: 0</span><br><br><span style=''color: red''><b>Test Case 2 Failed.</b><br>Expected TypeError: isPalindrome() missing 2 required positional arguments: ''a'' and ''b''\n for isPalindrome(''laptop'')<br>Received False<br>Points Deducted: 0</span><br><br><span style=''color: red''><b>Test Case 3 Failed.</b><br>Expected TypeError: isPalindrome() missing 2 required positional arguments: ''a'' and ''b''\n for isPalindrome(''civic'')<br>Received True<br>Points Deducted: 1</span><br><br>|*|<br><span style=''color: red''><b>Incorrect Function Name: operation</b><br>Expected Function Name: sumAll<br>Points Deducted: 2</span><br><br><span style=''color: green''><b>Constraint Passed: Function Returns a Value</b><br>Points Awarded:  2</span><br><br><span style=''color: red''><b>Test Case 1 Failed.</b><br>Expected TypeError: sumAll() missing 2 required positional arguments: ''a'' and ''b''\n for sumAll(5)<br>Received 15<br>Points Deducted: 0</span><br><br><span style=''color: red''><b>Test Case 2 Failed.</b><br>Expected TypeError: sumAll() missing 2 required positional arguments: ''a'' and ''b''\n for sumAll(6)<br>Received 21<br>Points Deducted: 0</span><br><br><span style=''color: red''><b>Test Case 3 Failed.</b><br>Expected TypeError: sumAll() missing 2 required positional arguments: ''a'' and ''b''\n for sumAll(7)<br>Received 28<br>Points Deducted: 1</span><br><br>|*|<br><span style=''color: red''><b>Incorrect Function Name: operation</b><br>Expected Function Name: sumAll2<br>Points Deducted: 2</span><br><br><span style=''color: green''><b>Constraint Passed: Function Returns a Value</b><br>Points Awarded:  2</span><br><br><span style=''color: red''><b>Test Case 1 Failed.</b><br>Expected TypeError: sumAll2() missing 2 required positional arguments: ''a'' and ''b''\n for sumAll2(5)<br>Received 15<br>Points Deducted: 0</span><br><br><span style=''color: red''><b>Tes', '2|*|2|*|2|*|2|*|2|*|2|*|2|*|2|*|2|*|2|*|2|*|2|*|2|*|2|*|2|*|2|*|2|*|2|*|2|*|2', '2|*|2|*|2|*|2|*|2|*|2|*|2|*|2|*|2|*|2|*|2|*|2|*|2|*|2|*|2|*|2|*|2|*|2|*|2|*|2', 40, 0),
(80, 1, 'student', 'def maxArray()\n  print ''hey hey we''re the monkees''|*|def peoplesaywemonkeyaround()\n  return ''we too busy singing''|*|def inRange()\n  return ''to put anybody down''', 5, 'Get out|*|asdsgfdge|*|qwertfhjkl', '<br><span style=''color: red''><b>Incorrect Function Name: </b><br>Expected Function Name: maxArray<br>Points Deducted: 2</span><br><br><span style=''color: red''><b>No Function Return</b><br>Points Deducted: 2</span><br><br><span style=''color: red''><b>Test Case 1 Failed.</b><br>Expected 6<br>Received SyntaxError: invalid syntax\n for maxArray([1,6,2,5,1])<br>Points Deducted: 2</span><br><br><span style=''color: red''><b>Test Case 2 Failed.</b><br>Expected 3<br>Received SyntaxError: invalid syntax\n for maxArray([1,2,3])<br>Points Deducted: 2</span><br><br><span style=''color: red''><b>Test Case 3 Failed.</b><br>Expected 10<br>Received SyntaxError: invalid syntax\n for maxArray([10])<br>Points Deducted: 2</span><br><br>|*|<br><span style=''color: red''><b>Incorrect Function Name: </b><br>Expected Function Name: initialVowels<br>Points Deducted: 2</span><br><br><span style=''color: green''><b>Constraint Passed: Function Returns a Value</b><br>Points Awarded:  2</span><br><br><span style=''color: red''><b>Test Case 1 Failed.</b><br>Expected [''Our'', ''end'', ''about'']<br>Received SyntaxError: invalid syntax\n for initialVowels(''Our lives begin to end the day we become silent about things that matter'')<br>Points Deducted: 9</span><br><br><span style=''color: red''><b>Test Case 2 Failed.</b><br>Expected [''airplane'', ''avocado'', ''elephant'', ''igloo'', ''octopus'']<br>Received SyntaxError: invalid syntax\n for initialVowels(''airplane avocado elephant igloo octopus mouse bechtold Dog Car Math Hiyo'')<br>Points Deducted: 9</span><br><br><span style=''color: red''><b>Test Case 3 Failed.</b><br>Expected [''a'']<br>Received SyntaxError: invalid syntax\n for initialVowels(''You have $7. Try not to spend more than $7 a day.'')<br>Points Deducted: 8</span><br><br>|*|<br><span style=''color: red''><b>Incorrect Function Name: </b><br>Expected Function Name: inRange<br>Points Deducted: 2</span><br><br><span style=''color: green''><b>Constraint Passed: Function Returns a Value</b><br>Points Awarded:  2</span><br><br><span style=''color: red''><b>Test Case 1 Failed.</b><br>Expected True<br>Received SyntaxError: invalid syntax\n for inRange(5,1,6)<br>Points Deducted: 23</span><br><br><span style=''color: red''><b>Test Case 2 Failed.</b><br>Expected False<br>Received SyntaxError: invalid syntax\n for inRange(7,1,6)<br>Points Deducted: 23</span><br><br>', '1|*|4|*|0', '0|*|2|*|2', 4, 1),
(81, 21, 'student', 'garbage|*|return ''garbage''|*|def operation(d):', 4, NULL, '<br><span style=''color: red''><b>Incorrect Function Name: </b><br>Expected Function Name: maxArray<br>Points Deducted: 2</span><br><br><span style=''color: red''><b>No Function Return</b><br>Points Deducted: 2</span><br><br><span style=''color: red''><b>Test Case 1 Failed.</b><br>Expected 6<br>Received NameError: name ''garbage'' is not defined\n for maxArray([1,6,2,5,1])<br>Points Deducted: 7</span><br><br><span style=''color: red''><b>Test Case 2 Failed.</b><br>Expected 3<br>Received NameError: name ''garbage'' is not defined\n for maxArray([1,2,3])<br>Points Deducted: 7</span><br><br><span style=''color: red''><b>Test Case 3 Failed.</b><br>Expected 10<br>Received NameError: name ''garbage'' is not defined\n for maxArray([10])<br>Points Deducted: 7</span><br><br>|*|<br><span style=''color: red''><b>Incorrect Function Name: </b><br>Expected Function Name: initialVowels<br>Points Deducted: 2</span><br><br><span style=''color: green''><b>Constraint Passed: Function Returns a Value</b><br>Points Awarded:  2</span><br><br><span style=''color: red''><b>Test Case 1 Failed.</b><br>Expected [''Our'', ''end'', ''about'']<br>Received SyntaxError: ''return'' outside function\n for initialVowels(''Our lives begin to end the day we become silent about things that matter'')<br>Points Deducted: 7</span><br><br><span style=''color: red''><b>Test Case 2 Failed.</b><br>Expected [''airplane'', ''avocado'', ''elephant'', ''igloo'', ''octopus'']<br>Received SyntaxError: ''return'' outside function\n for initialVowels(''airplane avocado elephant igloo octopus mouse bechtold Dog Car Math Hiyo'')<br>Points Deducted: 7</span><br><br><span style=''color: red''><b>Test Case 3 Failed.</b><br>Expected [''a'']<br>Received SyntaxError: ''return'' outside function\n for initialVowels(''You have $7. Try not to spend more than $7 a day.'')<br>Points Deducted: 7</span><br><br>|*|<br><span style=''color: green''><b>Constraint Passed: Valid Function Name: operation</b><br>Points Awarded: 2</span><br><br><span style=''color: red''><b>No Function Return</b><br>Points Deducted: 2</span><br><br><span style=''color: red''><b>Test Case 1 Failed.</b><br>Expected 3<br>Received IndentationError: expected an indented block\n for operation(''+'', 1,2)<br>Points Deducted: 12</span><br><br><span style=''color: red''><b>Test Case 2 Failed.</b><br>Expected 1<br>Received IndentationError: expected an indented block\n for operation(''-'', 2,1)<br>Points Deducted: 12</span><br><br><span style=''color: red''><b>Test Case 3 Failed.</b><br>Expected 2<br>Received IndentationError: expected an indented block\n for operation(''*'', 2,1)<br>Points Deducted: 12</span><br><br><span style=''color: red''><b>Test Case 4 Failed.</b><br>Expected 2<br>Received IndentationError: expected an indented block\n for operation(''/'', 2,1)<br>Points Deducted: 10</span><br><br>', '0|*|2|*|2', '0|*|2|*|2', 4, 0),
(82, 24, 'student', 'def maxArray(g):    return max(g)|*|voqledf', 24, NULL, '<br><span style=''color: green''><b>Constraint Passed: Valid Function Name: maxArray</b><br>Points Awarded: 2</span><br><br><span style=''color: green''><b>Constraint Passed: Function Returns a Value</b><br>Points Awarded:  2</span><br><br><span style=''color: green''><b>Test Case 1 has Passed.</b> <br>Points Awarded: 7</span><br><br><span style=''color: green''><b>Test Case 2 has Passed.</b> <br>Points Awarded: 7</span><br><br><span style=''color: green''><b>Test Case 3 has Passed.</b> <br>Points Awarded: 6</span><br><br>|*|<br><span style=''color: red''><b>Incorrect Function Name: </b><br>Expected Function Name: initialVowels<br>Points Deducted: 2</span><br><br><span style=''color: red''><b>No Function Return</b><br>Points Deducted: 2</span><br><br><span style=''color: red''><b>Test Case 1 Failed.</b><br>Expected [''Our'', ''end'', ''about'']<br>Received NameError: name ''voqledf'' is not defined  for initialVowels(''Our lives begin to end the day we become silent about things that matter'')<br>Points Deducted: 4</span><br><br><span style=''color: red''><b>Test Case 2 Failed.</b><br>Expected [''airplane'', ''avocado'', ''elephant'', ''igloo'', ''octopus'']<br>Received NameError: name ''voqledf'' is not defined  for initialVowels(''airplane avocado elephant igloo octopus mouse bechtold Dog Car Math Hiyo'')<br>Points Deducted: 4</span><br><br><span style=''color: red''><b>Test Case 3 Failed.</b><br>Expected [''a'']<br>Received NameError: name ''voqledf'' is not defined  for initialVowels(''You have $7. Try not to spend more than $7 a day.'')<br>Points Deducted: 3</span><br><br>', '24|*|0', '24|*|0', 24, 0),
(83, 23, 'student', 'dgsdfsd|*|sgdsgdfg', 2, '|*|', '<br><span style=''color: red''><b>Incorrect Function Name: </b><br>Expected Function Name: maxArray<br>Points Deducted: 2</span><br><br><span style=''color: red''><b>No Function Return</b><br>Points Deducted: 2</span><br><br><span style=''color: red''><b>Test Case 1 Failed.</b><br>Expected 6<br>Received NameError: name ''dgsdfsd'' is not defined\n for maxArray([1,6,2,5,1])<br>Points Deducted: 6</span><br><br><span style=''color: red''><b>Test Case 2 Failed.</b><br>Expected 3<br>Received NameError: name ''dgsdfsd'' is not defined\n for maxArray([1,2,3])<br>Points Deducted: 6</span><br><br><span style=''color: red''><b>Test Case 3 Failed.</b><br>Expected 10<br>Received NameError: name ''dgsdfsd'' is not defined\n for maxArray([10])<br>Points Deducted: 7</span><br><br>|*|<br><span style=''color: red''><b>Incorrect Function Name: </b><br>Expected Function Name: initialVowels<br>Points Deducted: 2</span><br><br><span style=''color: red''><b>No Function Return</b><br>Points Deducted: 2</span><br><br><span style=''color: red''><b>Test Case 1 Failed.</b><br>Expected [''Our'', ''end'', ''about'']<br>Received NameError: name ''sgdsgdfg'' is not defined\n for initialVowels(''Our lives begin to end the day we become silent about things that matter'')<br>Points Deducted: 4</span><br><br><span style=''color: red''><b>Test Case 2 Failed.</b><br>Expected [''airplane'', ''avocado'', ''elephant'', ''igloo'', ''octopus'']<br>Received NameError: name ''sgdsgdfg'' is not defined\n for initialVowels(''airplane avocado elephant igloo octopus mouse bechtold Dog Car Math Hiyo'')<br>Points Deducted: 4</span><br><br><span style=''color: red''><b>Test Case 3 Failed.</b><br>Expected [''a'']<br>Received NameError: name ''sgdsgdfg'' is not defined\n for initialVowels(''You have $7. Try not to spend more than $7 a day.'')<br>Points Deducted: 3</span><br><br>', '0|*|2', '0|*|0', 0, 1),
(84, 25, 'pr327', 'yo yo yo |*|heyyyy|*|goodbue|*|hello', 0, NULL, '<br><span style=''color: red''><b>Incorrect Function Name: </b><br>Expected Function Name: maxArray<br>Points Deducted: 2</span><br><br><span style=''color: red''><b>No Function Return</b><br>Points Deducted: 2</span><br><br><span style=''color: red''><b>Test Case 1 Failed.</b><br>Expected 6<br>Received SyntaxError: invalid syntax\n for maxArray([1,6,2,5,1])<br>Points Deducted: 9</span><br><br><span style=''color: red''><b>Test Case 2 Failed.</b><br>Expected 3<br>Received SyntaxError: invalid syntax\n for maxArray([1,2,3])<br>Points Deducted: 9</span><br><br><span style=''color: red''><b>Test Case 3 Failed.</b><br>Expected 10<br>Received SyntaxError: invalid syntax\n for maxArray([10])<br>Points Deducted: 8</span><br><br>|*|<br><span style=''color: red''><b>Incorrect Function Name: </b><br>Expected Function Name: initialVowels<br>Points Deducted: 2</span><br><br><span style=''color: red''><b>No Function Return</b><br>Points Deducted: 2</span><br><br><span style=''color: red''><b>Test Case 1 Failed.</b><br>Expected [''Our'', ''end'', ''about'']<br>Received NameError: name ''heyyyy'' is not defined\n for initialVowels(''Our lives begin to end the day we become silent about things that matter'')<br>Points Deducted: 9</span><br><br><span style=''color: red''><b>Test Case 2 Failed.</b><br>Expected [''airplane'', ''avocado'', ''elephant'', ''igloo'', ''octopus'']<br>Received NameError: name ''heyyyy'' is not defined\n for initialVowels(''airplane avocado elephant igloo octopus mouse bechtold Dog Car Math Hiyo'')<br>Points Deducted: 9</span><br><br><span style=''color: red''><b>Test Case 3 Failed.</b><br>Expected [''a'']<br>Received NameError: name ''heyyyy'' is not defined\n for initialVowels(''You have $7. Try not to spend more than $7 a day.'')<br>Points Deducted: 8</span><br><br>|*|<br><span style=''color: red''><b>Incorrect Function Name: </b><br>Expected Function Name: merge<br>Points Deducted: 2</span><br><br><span style=''color: red''><b>No Function Return</b><br>Points Deducted: 2</span><br><br><span style=''color: red''><b>Test Case 1 Failed.</b><br>Expected [6, 8, 10, 12]<br>Received NameError: name ''goodbue'' is not defined\n for merge([1,2,3,4],[5,6,7,8])<br>Points Deducted: 13</span><br><br><span style=''color: red''><b>Test Case 2 Failed.</b><br>Expected [8, 10]<br>Received NameError: name ''goodbue'' is not defined\n for merge([2,3],[6,7])<br>Points Deducted: 13</span><br><br>|*|<br><span style=''color: red''><b>Incorrect Function Name: </b><br>Expected Function Name: operation<br>Points Deducted: 2</span><br><br><span style=''color: red''><b>No Function Return</b><br>Points Deducted: 2</span><br><br><span style=''color: red''><b>Test Case 1 Failed.</b><br>Expected 3<br>Received NameError: name ''hello'' is not defined\n for operation(''+'', 1,2)<br>Points Deducted: 7</span><br><br><span style=''color: red''><b>Test Case 2 Failed.</b><br>Expected 1<br>Received NameError: name ''hello'' is not defined\n for operation(''-'', 2,1)<br>Points Deducted: 7</span><br><br><span style=''color: red''><b>Test Case 3 Failed.</b><br>Expected 2<br>Received NameError: name ''hello'' is not defined\n for operation(''*'', 2,1)<br>Points Deducted: 7</span><br><br><span style=''color: red''><b>Test Case 4 Failed.</b><br>Expected 2<br>Received NameError: name ''hello'' is not defined\n for operation(''/'', 2,1)<br>Points Deducted: 5</span><br><br>', '0|*|0|*|0|*|0', '0|*|0|*|0|*|0', 0, 0),
(85, 25, 'student', 'def operation(op, a, b):\n    if op == ''+'':\n        return a + b\n    elif op == ''-'':\n        return a - b\n    elif op == ''*'':\n        return a * b\n    elif op == ''/'':\n        return a / b\n    else:\n        return ''error''\n\n\n\ndef isRange(num,left,right):\n    return num >= left and num <= right\n\n\n\ndef maxArray(lst):\n    maxVal = lst[0]\n    for item in lst:\n        if item > maxVal:\n            maxVal = item\n    return maxVal\n\n\n\ndef initialVowels(sentence):\n    vowels = ''AEIOUaeiou''\n    words = sentence.split()\n    lst = []\n    for word in words:\n        if word[0] in vowels:\n            lst.append(word)\n    return lst\n\n\n\ndef repeatWords(sentence):\n    words = sentence.split()\n    lst = []\n    for word in words:\n        if words.count(word) > 1 and word not in lst:\n            lst.append(word)\n    return lst\n\n\n\ndef evenLengths(sentence):\n    count = 0\n    for word in sentence:\n        if len(word) % 2 == 0:\n            count += 1\n    return count\n\n\n\ndef beginsWith(letter, sentence):\n    count = 0\n    for word in sentence:\n        if word[0] == letter:\n            count += 1\n    return count\n\n\n\ndef longestWord(sentence):\n    words = sentence.split()\n    max = 0\n    for word in words:\n        if len(word) > max:\n            max = len(word)\n    return max\n\n\n\ndef longWords(sentence, cutoff):\n    words = sentence.split()\n    rtn = []\n    for word in words:\n        if len(word) > cutoff:\n            rtn.append(word)\n    return rtn\n\n\n\ndef isOdd(number):\n    return number % 2 == 1\n\n\n\ndef isPalindrome(word):\n    return word == word[::-1]\n\n|*||*||*|', 28, NULL, '<br><span style=''color: red''><b>Incorrect Function Name: operation</b><br>Expected Function Name: maxArray<br>Points Deducted: 2</span><br><br><span style=''color: green''><b>Constraint Passed: Function Returns a Value</b><br>Points Awarded:  2</span><br><br><span style=''color: green''><b>Test Case 1 has Passed.</b> <br>Points Awarded: 9</span><br><br><span style=''color: green''><b>Test Case 2 has Passed.</b> <br>Points Awarded: 9</span><br><br><span style=''color: green''><b>Test Case 3 has Passed.</b> <br>Points Awarded: 8</span><br><br>|*|<br><span style=''color: red''><b>Incorrect Function Name: </b><br>Expected Function Name: initialVowels<br>Points Deducted: 2</span><br><br><span style=''color: red''><b>No Function Return</b><br>Points Deducted: 2</span><br><br><span style=''color: red''><b>Test Case 1 Failed.</b><br>Expected [''Our'', ''end'', ''about'']<br>Received NameError: name ''initialVowels'' is not defined\n for initialVowels(''Our lives begin to end the day we become silent about things that matter'')<br>Points Deducted: 9</span><br><br><span style=''color: red''><b>Test Case 2 Failed.</b><br>Expected [''airplane'', ''avocado'', ''elephant'', ''igloo'', ''octopus'']<br>Received NameError: name ''initialVowels'' is not defined\n for initialVowels(''airplane avocado elephant igloo octopus mouse bechtold Dog Car Math Hiyo'')<br>Points Deducted: 9</span><br><br><span style=''color: red''><b>Test Case 3 Failed.</b><br>Expected [''a'']<br>Received NameError: name ''initialVowels'' is not defined\n for initialVowels(''You have $7. Try not to spend more than $7 a day.'')<br>Points Deducted: 8</span><br><br>|*|<br><span style=''color: red''><b>Incorrect Function Name: </b><br>Expected Function Name: merge<br>Points Deducted: 2</span><br><br><span style=''color: red''><b>No Function Return</b><br>Points Deducted: 2</span><br><br><span style=''color: red''><b>Test Case 1 Failed.</b><br>Expected [6, 8, 10, 12]<br>Received NameError: name ''merge'' is not defined\n for merge([1,2,3,4],[5,6,7,8])<br>Points Deducted: 13</span><br><br><span style=''color: red''><b>Test Case 2 Failed.</b><br>Expected [8, 10]<br>Received NameError: name ''merge'' is not defined\n for merge([2,3],[6,7])<br>Points Deducted: 13</span><br><br>|*|<br><span style=''color: red''><b>Incorrect Function Name: </b><br>Expected Function Name: operation<br>Points Deducted: 2</span><br><br><span style=''color: red''><b>No Function Return</b><br>Points Deducted: 2</span><br><br><span style=''color: red''><b>Test Case 1 Failed.</b><br>Expected 3<br>Received NameError: name ''operation'' is not defined\n for operation(''+'', 1,2)<br>Points Deducted: 7</span><br><br><span style=''color: red''><b>Test Case 2 Failed.</b><br>Expected 1<br>Received NameError: name ''operation'' is not defined\n for operation(''-'', 2,1)<br>Points Deducted: 7</span><br><br><span style=''color: red''><b>Test Case 3 Failed.</b><br>Expected 2<br>Received NameError: name ''operation'' is not defined\n for operation(''*'', 2,1)<br>Points Deducted: 7</span><br><br><span style=''color: red''><b>Test Case 4 Failed.</b><br>Expected 2<br>Received NameError: name ''operation'' is not defined\n for operation(''/'', 2,1)<br>Points Deducted: 5</span><br><br>', '28|*|0|*|0|*|0', '28|*|0|*|0|*|0', 28, 0),
(86, 26, 'student', 'def maxArray(lst):\n    maxVal = lst[0]\n    for item in lst:\n        if item > maxVal:\n            maxVal = item\n    return maxVal|*|def inRange(num,left,right):\n    return num >= left and num <= right|*|def isPalindrome(word):\n    return word == word[::-1]', 30, NULL, '<br><span style=''color: green''><b>Constraint Passed: Valid Function Name: maxArray</b><br>Points Awarded: 2</span><br><br><span style=''color: green''><b>Constraint Passed: Function Returns a Value</b><br>Points Awarded:  2</span><br><br><span style=''color: green''><b>Test Case 1 has Passed.</b> <br>Points Awarded: 2</span><br><br><span style=''color: green''><b>Test Case 2 has Passed.</b> <br>Points Awarded: 2</span><br><br><span style=''color: green''><b>Test Case 3 has Passed.</b> <br>Points Awarded: 2</span><br><br>|*|<br><span style=''color: green''><b>Constraint Passed: Valid Function Name: inRange</b><br>Points Awarded: 2</span><br><br><span style=''color: green''><b>Constraint Passed: Function Returns a Value</b><br>Points Awarded:  2</span><br><br><span style=''color: green''><b>Test Case 1 has Passed.</b> <br>Points Awarded: 3</span><br><br><span style=''color: green''><b>Test Case 2 has Passed.</b> <br>Points Awarded: 3</span><br><br>|*|<br><span style=''color: green''><b>Constraint Passed: Valid Function Name: isPalindrome</b><br>Points Awarded: 2</span><br><br><span style=''color: green''><b>Constraint Passed: Function Returns a Value</b><br>Points Awarded:  2</span><br><br><span style=''color: green''><b>Test Case 1 has Passed.</b> <br>Points Awarded: 2</span><br><br><span style=''color: green''><b>Test Case 2 has Passed.</b> <br>Points Awarded: 2</span><br><br><span style=''color: green''><b>Test Case 3 has Passed.</b> <br>Points Awarded: 2</span><br><br>', '10|*|10|*|10', '10|*|10|*|10', 30, 0),
(87, 27, 'student', 'def tripleIt(number):\n    return number*3', 10, NULL, '<br><span style=''color: green''><b>Constraint Passed: Valid Function Name: tripleIt</b><br>Points Awarded: 2</span><br><br><span style=''color: green''><b>Constraint Passed: Function Returns a Value</b><br>Points Awarded:  2</span><br><br><span style=''color: green''><b>Test Case 1 has Passed.</b> <br>Points Awarded: 3</span><br><br><span style=''color: green''><b>Test Case 2 has Passed.</b> <br>Points Awarded: 3</span><br><br>', '10', '10', 10, 0);

-- --------------------------------------------------------

--
-- Table structure for table `USERS`
--
-- Creation: Nov 05, 2018 at 04:28 PM
--

CREATE TABLE IF NOT EXISTS `USERS` (
  `ID` varchar(255) NOT NULL,
  `PWD` char(128) NOT NULL,
  `TYPE` int(1) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `USERS`
--

INSERT INTO `USERS` (`ID`, `PWD`, `TYPE`) VALUES
('instructor', '2dd33c7dc60dee15a6827d5909124f6a', 1),
('jmb75', '2dd33c7dc60dee15a6827d5909124f6a', 1),
('pr327', '2dd33c7dc60dee15a6827d5909124f6a', 2),
('sh424', '2dd33c7dc60dee15a6827d5909124f6a', 1),
('student', '2dd33c7dc60dee15a6827d5909124f6a', 2);

--
-- Indexes for dumped tables
--

--
-- Indexes for table `EXAM`
--
ALTER TABLE `EXAM`
 ADD PRIMARY KEY (`EID`);

--
-- Indexes for table `QUESTIONS`
--
ALTER TABLE `QUESTIONS`
 ADD PRIMARY KEY (`QID`);

--
-- Indexes for table `STUDENT`
--
ALTER TABLE `STUDENT`
 ADD PRIMARY KEY (`SExamID`);

--
-- Indexes for table `USERS`
--
ALTER TABLE `USERS`
 ADD PRIMARY KEY (`ID`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT for table `EXAM`
--
ALTER TABLE `EXAM`
MODIFY `EID` int(255) NOT NULL AUTO_INCREMENT COMMENT 'Unique ID for each Exam',AUTO_INCREMENT=28;
--
-- AUTO_INCREMENT for table `QUESTIONS`
--
ALTER TABLE `QUESTIONS`
MODIFY `QID` int(255) NOT NULL AUTO_INCREMENT COMMENT 'Unique Question ID (Auto Increment)',AUTO_INCREMENT=60;
--
-- AUTO_INCREMENT for table `STUDENT`
--
ALTER TABLE `STUDENT`
MODIFY `SExamID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'ID of student exam results',AUTO_INCREMENT=88;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
